/*
 * Copyright Â© 2017 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Rug to TypeScript transpiler.

import { EditProject } from '@atomist/rug/operations/ProjectEditor'
import { PathExpressionEngine } from '@atomist/rug/tree/PathExpression'
import { Editor, Tags, Parameter } from '@atomist/rug/operations/Decorators'
import { Pattern } from '@atomist/rug/operations/RugOperation'
import { Project, RugArchiveProject } from '@atomist/rug/model/Core'

/**
    ConvertRugToTypeScript
    ConvertRugToTypeScript
 */

@Editor("ConvertRugToTypeScript", "convert a DSL Rug editor to TypeScript")
class ConvertRugToTypeScript implements EditProject {

    @Parameter({
        pattern: "^.*$"
    })
    rug_name: string;

    edit(project: Project) {

        let eng: PathExpressionEngine = project.context().pathExpressionEngine();

        eng.with<RugArchiveProject>(project, '//RugArchiveProject()', p => {
            console.log("The rug name is " + this.rug_name)
            eng.with<any>(p, '//Editor()', r => {
                if (r.name() == this.rug_name) {
                    console.log("Changing rug " + r.name())
                    r.convertToTypeScript()
                }
            })
        })

    }

}
export let convertRugToTypeScript = new ConvertRugToTypeScript();
