/*
 * Copyright Â© 2017 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Rug to TypeScript transpiler.

import { ProjectEditor } from '@atomist/rug/operations/ProjectEditor'
import { Project } from '@atomist/rug/model/Core'
import { Result, Status, Parameter } from '@atomist/rug/operations/RugOperation'

import { PathExpressionEngine } from '@atomist/rug/tree/PathExpression'

import { File } from '@atomist/rug/model/Core'
/**
       breaking change from PR 112
*/


class UpgradeFrom0_7_1 implements ProjectEditor {

    name: string = "UpgradeFrom0_7_1"

    description: string = "breaking change from PR 112"



    edit(project: Project) {

        let eng: PathExpressionEngine = project.context().pathExpressionEngine();



        let p = project
        if (true) {
            eng.with<File>(p, '//File()', f => {
                if (f.name().indexOf(".rug") > 0) {
                    f.replace("with file", "with File")
                    f.replace("with project", "with Project")
                    f.replace("with java.class", "with JavaType")
                    f.replace("with java.source", "with JavaSource")
                    f.replace("with pom", "with Pom")
                    f.replace("with elm.module", "with ElmModule")
                }
            })
        }

        return new Result(Status.Success, 'Editor [UpgradeFrom0_7_1] executed OK')
    }

}
var editor = new UpgradeFrom0_7_1();
